cmake_minimum_required(VERSION 3.17)
project(clion_cub3d2 C)

set(CMAKE_C_STANDARD 99)


#imagetest.c mlx.c
add_executable(clion_cub3d2 mlx.c get_next_line/get_next_line.c get_next_line/get_next_line_utils.c get_next_line/gnl_wrap_utils.c
        parser.c draw_utils.c cub_utils.c texture_parse.c cub_utils.h key_hooking.c key_hooking.h minilibx_opengl_20191021/mlx_get_screen_size.m
        sprites_utils.c sprites_utils.h exceptions.h params.h exceptions.c parser_utils.h parser_utils.c colors.h colors.c params.c main_inits.c
        main_inits.h dda_utils.h ray.c dda_utils.c wall_utils.c wall_utils.h draw_sprites.c draw_sprites.h player_params.h player_params.c
        parse_resolution.h parse_resolution.c map_checker.h map_checker.c map_line_checkers.h map_line_checkers.c fill_map.c fill_map.h is_empty.c
        get_sprites_list.c check_symbols.c go_th_params.c init_z_buffer.c parse_line_sect.c parse_params_except.c parse_params_except.h is_map_start.c
        increase_lst.c get_check_params.c get_check_tex.c sortSprites.c sortSprites.h parse_args.c make_move.c turn_on_off_flags.c
        do_screenshot.c press_fgs_struct.h throw_file_except.c)


#дом
#target_link_libraries(clion_cub3d2 "-framework OpenGL -framework AppKit")
#target_link_libraries(clion_cub3d2 "/Users/anastasia/CLionProjects/clion_cub3d/minilibx_opengl_20191021/libmlx.a")
#target_link_libraries(clion_cub3d2 "/Users/anastasia/CLionProjects/clion_cub3d/libft.a")

#школа
target_link_libraries(clion_cub3d2 "-framework OpenGL -framework AppKit")
target_link_libraries(clion_cub3d2 "/Users/cerebus/projects/clion_cub3d2/minilibx_opengl_20191021/libmlx.a")
target_link_libraries(clion_cub3d2 "/Users/cerebus/projects/clion_cub3d2/libft.a")